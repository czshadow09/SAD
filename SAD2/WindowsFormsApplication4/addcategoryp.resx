<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Add.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>