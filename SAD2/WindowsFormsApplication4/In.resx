<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Add.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>